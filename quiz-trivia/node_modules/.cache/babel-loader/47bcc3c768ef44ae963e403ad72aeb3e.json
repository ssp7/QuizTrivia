{"ast":null,"code":"var _jsxFileName = \"/Users/student/Desktop/QuizTrivia/quiz-trivia/src/App.tsx\";\nimport React, { useState } from \"react\";\nimport { Difficulty } from \"./API\";\nimport { getTriviaQuestions } from \"./API\";\nty;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n  const TOTAL_QUESTIONS = 10;\n  console.log(getTriviaQuestions(TOTAL_QUESTIONS, Difficulty.EASY));\n\n  const startQuiz = async () => {};\n\n  const checkAnswer = e => {};\n\n  const nextQuestion = () => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, \"Quiz Trivia\", /*#__PURE__*/React.createElement(\"button\", {\n    className: \"start\",\n    onClick: startQuiz,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, \"Start Quiz\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Score:\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"Loading Questions.....\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"next\",\n    onClick: nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Next\"));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/student/Desktop/QuizTrivia/quiz-trivia/src/App.tsx"],"names":["React","useState","Difficulty","getTriviaQuestions","ty","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setAnswers","score","setScore","gameOver","setGameOver","TOTAL_QUESTIONS","console","log","EASY","startQuiz","checkAnswer","e","nextQuestion"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,SAASC,UAAT,QAA0C,OAA1C;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACAC,EAAE;;AACF,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAkB,EAAlB,CAA1C;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACW,WAAD,EAAcC,UAAd,IAA4BZ,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,IAAD,CAAxC;AAEA,QAAMiB,eAAe,GAAG,EAAxB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYjB,kBAAkB,CAACe,eAAD,EAAkBhB,UAAU,CAACmB,IAA7B,CAA9B;;AAEA,QAAMC,SAAS,GAAG,YAAY,CAAE,CAAhC;;AACA,QAAMC,WAAW,GAAIC,CAAD,IAA4C,CAAE,CAAlE;;AAEA,QAAMC,YAAY,GAAG,MAAM,CAAE,CAA7B;;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAEE;AAAQ,IAAA,SAAS,EAAC,OAAlB;AAA0B,IAAA,OAAO,EAAEH,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAKE;AAAG,IAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BANF,eAeE;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAEG,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,CADF;AAqBD,CAtCD;;AAwCA,eAAepB,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport QuestionCard from \"./Components/QuestionCard\";\nimport { Difficulty, QuestionState } from \"./API\";\nimport { getTriviaQuestions } from \"./API\";\nty\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const TOTAL_QUESTIONS = 10;\n\n  console.log(getTriviaQuestions(TOTAL_QUESTIONS, Difficulty.EASY));\n\n  const startQuiz = async () => {};\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {};\n\n  const nextQuestion = () => {};\n  return (\n    <div className=\"App\">\n      Quiz Trivia\n      <button className=\"start\" onClick={startQuiz}>\n        Start Quiz\n      </button>\n      <p className=\"score\">Score:</p>\n      <p>Loading Questions.....</p>\n      {/* <QuestionCard\n        questionNumber={number + 1}\n        totalQuestions={TOTAL_QUESTIONS}\n        question={questions[number].question}\n        answers={questions[number].answers}\n        userAnswer={userAnswers ? userAnswers[number] : undefined}\n        callback={checkAnswer}\n      /> */}\n      <button className=\"next\" onClick={nextQuestion}>\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}